type Post @model {
  id: ID!
  title: String!
  status: PostStatus!
  rating: Int
  content: String
  # New field with @connection
  comments: [Comment] @connection(keyName: "byPost", fields: ["id"])
  # https://docs.amplify.aws/lib/datastore/relational/q/platform/js/#many-to-many
  editors: [PostEditor] @connection(keyName: "byPost", fields: ["id"])
}

enum PostStatus {
  DRAFT
  PUBLISHED
}

# https://docs.amplify.aws/lib/datastore/relational/q/platform/js/#updated-schema
# New model
type Comment @model @key(name: "byPost", fields: ["postID", "content"]) {
  id: ID!
  postID: ID!
  content: String!
}

type PostEditor
  @model(queries: null)
  @key(name: "byPost", fields: ["postID", "editorID"])
  @key(name: "byEditor", fields: ["editorID", "postID"]) {
  id: ID!
  postID: ID!
  editorID: ID!
  post: Post! @connection(fields: ["postID"])
  editor: User! @connection(fields: ["editorID"])
}

type User @model {
  id: ID!
  username: String!
  posts: [PostEditor] @connection(keyName: "byEditor", fields: ["id"])
}
